# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        if not root:
            return True
        if abs(self.dfs(root.left)-self.dfs(root.right))>1:
            return False
        else:
            return self.isBalanced(root.left) and self.isBalanced(root.right)
        
        
    def dfs(self,root):
        if not root:
            return 0
        if not root.left and not root.right:
            return 1
        elif not root.left:
            return self.dfs(root.right)+1
        elif not root.right:
            return self.dfs(root.left)+1
        else:
            left=self.dfs(root.left)
            right=self.dfs(root.right)
            return max(left,right)+1
        
        
