class Solution(object):
    def minimumTotal(self, triangle):
        """
        :type triangle: List[List[int]]
        :rtype: int
        """
        m=len(triangle)
        if m==0:
            return 0
        dp= [[0]*_ for _ in list(len(a) for a in triangle)]
        dp[0][0]=triangle[0][0]
        for i in range(m-1):
            dp[i+1][0]=dp[i][0]+triangle[i+1][0]
            dp[i+1][-1]=dp[i][-1]+triangle[i+1][-1]
        for i in range(m-1):
            n=len(dp[i+1])
            for j in range(n):
                if j>0 and j!=n-1:
                    dp[i+1][j]=min(dp[i][j],dp[i][j-1])+triangle[i+1][j]
        return min(dp[m-1])
                
        
