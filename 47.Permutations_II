class Solution:
    def permuteUnique(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        self.ret=[]
        self.visited=[0]*(len(nums))
        nums.sort()
        self.dfs(nums,[])
        return self.ret
    
    def dfs(self,nums,tmp):
        lens=len(nums)
        if lens==len(tmp):
            self.ret.append(tmp)
        for i in range(lens):
            if i!=0 and nums[i]==nums[i-1] and self.visited[i-1]:
                continue
            if self.visited[i]==0:
                self.visited[i]=1
                self.dfs(nums,tmp+[nums[i]])
                self.visited[i]=0
        
