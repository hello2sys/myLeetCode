# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def generateTrees(self, n):
        """
        :type n: int
        :rtype: List[TreeNode]
        """
        if n==0:
            return []
        return self.dfs(1,n)
    
    def dfs(self,start,end):
        ret=[]
        if start>end:
            ret.append(None)
            return ret
        for i in range(start,end+1):
            l=self.dfs(start,i-1)
            r=self.dfs(i+1,end)
            
            for j in range(len(l)):
                for k in range(len(r)):
                    n=TreeNode(i)
                    n.left=l[j]
                    n.right=r[k]
                    ret.append(n)                   
        return ret
        
        
        
